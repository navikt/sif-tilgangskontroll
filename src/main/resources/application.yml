no.nav:
  metrics:
    interval: 60_000

  gateways:
    pdl-api-base-url: # Settes i nais/<cluster>.json

  security.jwt:
    issuer:
      tokenx:
        discoveryUrl: ${TOKEN_X_WELL_KNOWN_URL}
        accepted_audience: ${TOKEN_X_CLIENT_ID}

    client:
      registration:
        tokenx-pdl-api:
          token-endpoint-url: ${TOKENDINGS_BASE_URL}/token
          grant-type: urn:ietf:params:oauth:grant-type:token-exchange
          authentication:
            client-auth-method: private_key_jwt
            client-id: ${TOKEN_X_CLIENT_ID}
            client-jwk: ${TOKEN_X_PRIVATE_JWK}
          token-exchange:
            audience: ${PDL_API_TOKENX_AUDIENCE}

        azure-pdl-api:
          token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
          grant-type: client_credentials
          scope: ${PDL_API_AZURE_AUDIENCE}
          authentication:
            client-auth-method: client_secret_basic
            client-id: ${AZURE_APP_CLIENT_ID}
            client-secret: ${AZURE_APP_CLIENT_SECRET}

management:
  endpoints:
    web:
      exposure:
        include: health, prometheus

spring:
  application:
    name: # Settes i nais/<cluster>.json

  rest:
    retry:
      multiplier: 2
      initialDelay: 1000
      maxDelay: 4000
      maxAttempts: 3
